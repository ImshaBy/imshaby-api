plugins {
    id 'java-library'
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management'
}

group = 'by.imsha'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = '21'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

dependencyManagement {
    imports {
        mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
    }
}

dependencies {
    api 'org.springframework.data:spring-data-mongodb'
    api 'jakarta.validation:jakarta.validation-api'
    api 'jakarta.annotation:jakarta.annotation-api'
    api 'org.hibernate.validator:hibernate-validator'
    api 'com.fasterxml.jackson.core:jackson-annotations'
    api 'com.fasterxml.jackson.core:jackson-databind'
    api 'org.apache.commons:commons-lang3'
    api "org.springframework.cloud:spring-cloud-starter-openfeign"
    api "com.github.rutledgepaulv:rest-query-engine:${restQueryEngineVersion}"
    api "com.google.guava:guava:${guavaVersion}"
    api project(':meilisearch:api')


    implementation 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}