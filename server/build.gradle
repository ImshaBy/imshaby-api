plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'by.imsha'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation project(':meilisearch:reader')

    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation "org.cache2k:cache2k-api:${cache2kVersion}"
    implementation "org.cache2k:cache2k-core:${cache2kVersion}"
    implementation "org.cache2k:cache2k-spring:${cache2kVersion}"
    implementation 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "ch.qos.logback.contrib:logback-jackson:${logbackVersion}"
    implementation "ch.qos.logback.contrib:logback-json-classic:${logbackVersion}"
    implementation "org.codehaus.janino:janino:${janinoVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.rest-assured:rest-assured'

    testImplementation 'org.junit.platform:junit-platform-suite'
    testImplementation 'io.cucumber:cucumber-java:7.15.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.15.0'
    testImplementation 'io.cucumber:cucumber-spring:7.15.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-json'
    testImplementation 'org.testcontainers:junit-jupiter'

    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.mongodb:mongodb-driver-sync' //TODO хз зачем он, проверить
}

processTestResources {
    // для профиля local необходима директория (заменяем projectBuildDir на путь к директории)
    expand(["projectBuildDir": layout.buildDirectory.getAsFile().get().getAbsolutePath()])
}

test {
    useJUnitPlatform()
}
